import { Suspense, useState } from 'react'
import { Routes, Route, NavLink } from 'react-router-dom'
import KeysPage from './pages/Keys'
import { Canvas } from '@react-three/fiber'
import { OrbitControls, Stars } from '@react-three/drei'
import { useAuth } from './context/auth'
import { createJob } from './services/editor'
import { LoginForm, SignupForm } from './components/AuthForms'

function Background3D() {
  return (
    <Canvas className="fixed inset-0 -z-10">
      <color attach="background" args={["#0b0b0e"]} />
      <ambientLight intensity={0.2} />
      <pointLight position={[10, 10, 10]} />
      <Stars radius={100} depth={50} count={5000} factor={4} fade speed={0.8} />
      <OrbitControls enablePan={false} enableZoom={false} autoRotate autoRotateSpeed={0.2} />
    </Canvas>
  )
}

function Layout({ children }: { children: React.ReactNode }) {
  return (
    <div className="min-h-screen text-white cinematic-gradient">
      <Background3D />
      <header className="sticky top-0 z-20 backdrop-blur bg-black/40 border-b border-white/10">
        <div className="mx-auto max-w-7xl px-6 py-4 flex items-center justify-between">
          <div className="font-semibold tracking-wide">CineAI</div>
          <nav className="flex gap-6 text-sm">
            <NavLink to="/" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Home</NavLink>
            <NavLink to="/features" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Features</NavLink>
            <NavLink to="/about" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>About</NavLink>
            <NavLink to="/contact" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Contact</NavLink>
            <NavLink to="/login" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Login</NavLink>
            <NavLink to="/signup" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Signup</NavLink>
            <NavLink to="/dashboard" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Dashboard</NavLink>
            <NavLink to="/dashboard/keys" className={({isActive})=>`hover:text-accent ${isActive?'text-accent':''}`}>Keys</NavLink>
          </nav>
        </div>
      </header>
      <main className="relative z-10">{children}</main>
      <footer className="z-10 border-t border-white/10 bg-black/40 backdrop-blur">
        <div className="mx-auto max-w-7xl px-6 py-10 text-sm text-white/60">© {new Date().getFullYear()} CineAI</div>
      </footer>
    </div>
  )
}

const Section = ({ title, subtitle }: { title: string; subtitle: string }) => (
  <section className="mx-auto max-w-7xl px-6 py-16">
    <h2 className="text-2xl sm:text-3xl font-semibold">{title}</h2>
    <p className="text-white/70 mt-2 max-w-3xl">{subtitle}</p>
    <div className="h-px bg-gradient-to-r from-white/0 via-white/10 to-white/0 mt-8" />
  </section>
)

function HomePage() {
  const sections = [
    ['Hero', 'Prompt-driven cinematic video editing.'],
    ['Showcase', 'See results generated by different providers.'],
    ['PromptComposer', 'Describe your vision; we map to templates.'],
    ['Templates', 'Curated templates across providers.'],
    ['Integrations', 'Shotstack, Creatomate, Plainly, Tavus and more.'],
    ['Realtime Preview', 'Low-latency previews while rendering.'],
    ['Collaboration', 'Share, comment and iterate with your team.'],
    ['CTA', 'Start creating—with your own API keys.'],
  ] as const
  return (
    <Layout>
      {sections.map(([t, s]) => (
        <Section key={t} title={t} subtitle={s} />
      ))}
    </Layout>
  )
}

function AboutPage() {
  const sections = [
    ['Mission', 'Democratize cinematic video creation.'],
    ['Team', 'Full‑stack engineers and designers.'],
    ['Tech', 'MERN, 3D, streaming jobs, plugin adapters.'],
    ['Security', 'Your keys, encrypted at rest on server.'],
    ['Roadmap', 'More providers, smart prompt mapping, GPU.'],
    ['Open Source', 'Community adapters for OSS tools.'],
    ['Support', 'Priority support for creators.'],
    ['Credits', 'Thanks to OSS maintainers.'],
  ] as const
  return (
    <Layout>
      {sections.map(([t, s]) => (
        <Section key={t} title={t} subtitle={s} />
      ))}
    </Layout>
  )
}

function FeaturesPage() {
  const sections = [
    ['Prompt Editing', 'Natural language controls mapped to templates.'],
    ['Multi‑Provider', 'One prompt to many render engines.'],
    ['Templates', 'Save and reuse your best setups.'],
    ['Assets', 'Manage media assets across providers.'],
    ['Previews', 'Fast WebGL composites for feedback.'],
    ['Automation', 'Batch render variants automatically.'],
    ['Webhooks', 'Get notified when jobs finish.'],
    ['Analytics', 'Track render time and success rates.'],
  ] as const
  return (
    <Layout>
      {sections.map(([t, s]) => (
        <Section key={t} title={t} subtitle={s} />
      ))}
    </Layout>
  )
}

function ContactPage() {
  const sections = [
    ['Contact', 'Reach us for support or partnerships.'],
    ['Sales', 'Custom integrations for studios.'],
    ['Community', 'Join the Discord and share.'],
    ['Docs', 'API and adapter documentation.'],
    ['Status', 'Service health and uptime.'],
    ['Careers', 'We are hiring across roles.'],
    ['Press', 'Media kit and brand assets.'],
    ['Legal', 'Terms and privacy.'],
  ] as const
  return (
    <Layout>
      {sections.map(([t, s]) => (
        <Section key={t} title={t} subtitle={s} />
      ))}
    </Layout>
  )
}

function LoginPage() {
  return (
    <Layout>
      <section className="mx-auto max-w-md px-6 py-16">
        <h2 className="text-2xl font-semibold mb-6">Login</h2>
        <LoginForm />
      </section>
    </Layout>
  )
}

function SignupPage() {
  return (
    <Layout>
      <section className="mx-auto max-w-md px-6 py-16">
        <h2 className="text-2xl font-semibold mb-6">Create account</h2>
        <SignupForm />
      </section>
    </Layout>
  )
}

function DashboardPage() {
  const { user } = useAuth()
  const [prompt, setPrompt] = useState('A cinematic slow‑motion product showcase with neon lighting')
  return (
    <Layout>
      <section className="mx-auto max-w-7xl px-6 py-12">
        <h2 className="text-2xl font-semibold mb-6">Dashboard</h2>
        <div className="text-white/60 mb-6">{user ? `Welcome, ${user.name}` : 'Please login to render videos.'}</div>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="bg-surface/80 border border-white/10 rounded-xl p-6 shadow-glow">
            <h3 className="font-semibold mb-2">Prompt Editor</h3>
            <textarea value={prompt} onChange={(e)=> setPrompt(e.target.value)} className="w-full bg-black/40 border border-white/10 rounded p-3 h-32" placeholder="Describe your video..." />
            <div className="flex gap-2 mt-3">
              {(['shotstack','creatomate','plainly','tavus','promptclip','lucyedit','ltxvideo','wan21'] as const).map(p=> (
                <button key={p} onClick={async()=>{ if(!user) return; await createJob(p, prompt); }} className="bg-white/10 hover:bg-white/20 border border-white/10 rounded px-3 py-2 text-xs capitalize">{p}</button>
              ))}
            </div>
          </div>
          <div className="bg-surface/80 border border-white/10 rounded-xl p-6">
            <h3 className="font-semibold mb-2">Providers</h3>
            <ul className="space-y-2 text-white/70">
              <li>Shotstack</li>
              <li>Creatomate</li>
              <li>Plainly Videos</li>
              <li>Tavus</li>
              <li>PromptClip</li>
              <li>Lucy Edit</li>
              <li>LTXVideo</li>
              <li>Wan 2.1</li>
            </ul>
          </div>
          <div className="bg-surface/80 border border-white/10 rounded-xl p-6">
            <h3 className="font-semibold mb-2">Jobs</h3>
            <div className="text-white/60">Your recent renders will appear here.</div>
          </div>
        </div>
      </section>
    </Layout>
  )
}

export default function App() {
  return (
    <Suspense fallback={null}>
      <Routes>
        <Route path="/" element={<HomePage />} />
        <Route path="/about" element={<AboutPage />} />
        <Route path="/features" element={<FeaturesPage />} />
        <Route path="/contact" element={<ContactPage />} />
        <Route path="/login" element={<LoginPage />} />
        <Route path="/signup" element={<SignupPage />} />
        <Route path="/dashboard" element={<DashboardPage />} />
        <Route path="/dashboard/keys" element={<KeysPage />} />
      </Routes>
    </Suspense>
  )
}
